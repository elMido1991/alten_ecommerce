plugins {
    id 'org.springframework.boot' version '3.2.1' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'java'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.ecommerce'
    version = '1.0.0'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2023.0.0")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

        // MapStruct
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        // MapStruct + Lombok
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        //H2 DB
        runtimeOnly 'com.h2database:h2'
    }

    test {
        useJUnitPlatform()
    }
}
tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor'
    ]
}